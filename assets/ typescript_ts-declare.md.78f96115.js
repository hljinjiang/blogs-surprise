import{_ as s,c as n,o as a,a as l}from"./app.65ec353e.js";const b=JSON.parse('{"title":"简介","description":"","frontmatter":{},"headers":[{"level":2,"title":"JS和TS","slug":"js和ts","link":"#js和ts","children":[]},{"level":2,"title":"申明文件（.d.ts）","slug":"申明文件-d-ts","link":"#申明文件-d-ts","children":[]}],"relativePath":" typescript/ts-declare.md","lastUpdated":1675601683000}'),e={name:" typescript/ts-declare.md"},p=l(`<h1 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-hidden="true">#</a></h1><h2 id="js和ts" tabindex="-1">JS和TS <a class="header-anchor" href="#js和ts" aria-hidden="true">#</a></h2><ol><li>编译型 <ol><li>源代码编译⽣成机器指令，再由机器运⾏机器码（⼆进制）</li></ol></li><li>解释型（JS） <ol><li>源代码翻译成中间代码，再⽤解释器对中间代码解释运⾏</li></ol></li><li>动态类型语⾔（JS） <ol><li>对数据类型检查是在运⽤时进⾏的</li></ol></li><li>静态类型语⾔（TS） <ol><li>对数据类型的检查是在运⾏前进⾏的</li></ol></li><li>强类型定义语⾔（TS） <ol><li>强制数据类型定义的语⾔，变量被指定了某个数据类型，如果不经过强制类型转换，那么永远是这个数据类型</li></ol></li><li>弱类型定义语⾔（JS） <ol><li>数据类型定义可以被忽略，可以对变量类型定义赋予不同类型的值</li></ol></li></ol><h2 id="申明文件-d-ts" tabindex="-1">申明文件（.d.ts） <a class="header-anchor" href="#申明文件-d-ts" aria-hidden="true">#</a></h2><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki monokai has-highlighted-lines"><code><span class="line highlighted"><span style="color:#88846F;">// 定义 test.d.ts</span></span>
<span class="line"><span style="color:#F92672;">declare</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">module</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;*.js&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">declare</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">namespace</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">$test</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">declare</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> personName</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">declare</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">getName</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#88846F;">// 定义 test.js</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">default</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  personName: </span><span style="color:#E6DB74;">&quot;personName111&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">getName</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;this is &quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> name;</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#88846F;">// 使用 test.js</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> $test </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;./test.js&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">($test.personName);</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">($test.</span><span style="color:#A6E22E;">getName</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;name&quot;</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,5),o=[p];function t(r,c,F,i,y,d){return a(),n("div",null,o)}const m=s(e,[["render",t]]);export{b as __pageData,m as default};
