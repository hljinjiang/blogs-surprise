import{_ as s,c as n,o as a,a as l}from"./app.46bbe91d.js";const b=JSON.parse('{"title":"Typescript 内置类型","description":"","frontmatter":{},"headers":[{"level":2,"title":"Partial","slug":"partial","link":"#partial","children":[]},{"level":2,"title":"Required","slug":"required","link":"#required","children":[]},{"level":2,"title":"Readonly","slug":"readonly","link":"#readonly","children":[]},{"level":2,"title":"Pick","slug":"pick","link":"#pick","children":[]},{"level":2,"title":"Record","slug":"record","link":"#record","children":[]},{"level":2,"title":"keyof","slug":"keyof","link":"#keyof","children":[]},{"level":2,"title":"never","slug":"never","link":"#never","children":[]},{"level":2,"title":"Exclude","slug":"exclude","link":"#exclude","children":[]},{"level":2,"title":"Extract","slug":"extract","link":"#extract","children":[]},{"level":2,"title":"NonNullable","slug":"nonnullable","link":"#nonnullable","children":[]},{"level":2,"title":"ReturnType","slug":"returntype","link":"#returntype","children":[]},{"level":2,"title":"InstanceType","slug":"instancetype","link":"#instancetype","children":[]},{"level":2,"title":"In","slug":"in","link":"#in","children":[]},{"level":2,"title":"extends","slug":"extends","link":"#extends","children":[]},{"level":2,"title":"装饰器","slug":"装饰器","link":"#装饰器","children":[]}],"relativePath":" typescript/ts-inlay-type.md","lastUpdated":1673763462000}'),p={name:" typescript/ts-inlay-type.md"},e=l(`<h1 id="typescript-内置类型" tabindex="-1">Typescript 内置类型 <a class="header-anchor" href="#typescript-内置类型" aria-hidden="true">#</a></h1><h2 id="partial" tabindex="-1">Partial <a class="header-anchor" href="#partial" aria-hidden="true">#</a></h2><ol><li>将类型 T的所有属性标记为可选属性</li><li>如：将 interface定义的接⼝属性设置为可选属性</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Partial</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">T</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    	[</span><span style="color:#A6E22E;text-decoration:underline;">P</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">keyof</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">T</span><span style="color:#F8F8F2;">]</span><span style="color:#F92672;">?:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">T</span><span style="color:#F8F8F2;">[</span><span style="color:#A6E22E;text-decoration:underline;">P</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">interface</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Person</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">     name</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">     gender</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;"> ｜ </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">; </span><span style="color:#88846F;">// 0：女， 1：男</span></span>
<span class="line"><span style="color:#F8F8F2;">     age</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> model</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Partial</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">Person</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">     name: </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">     gender: </span><span style="color:#AE81FF;">undefined</span><span style="color:#F8F8F2;">,  </span><span style="color:#88846F;">// 可以标记为undefined，或不定义接口属性</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="required" tabindex="-1">Required <a class="header-anchor" href="#required" aria-hidden="true">#</a></h2><ol><li>将类型 T的所有属性标记为必须属性</li><li>与 partial相反</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Required</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">T</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    	[</span><span style="color:#A6E22E;text-decoration:underline;">P</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">keyof</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">T</span><span style="color:#F8F8F2;">]</span><span style="color:#F92672;">-?:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">T</span><span style="color:#F8F8F2;">[</span><span style="color:#A6E22E;text-decoration:underline;">P</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> userList</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Required</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">Person</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    name: </span><span style="color:#E6DB74;">&#39;string&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    gender: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#88846F;">// 0：女， 1：男</span></span>
<span class="line"><span style="color:#F8F8F2;">    age: </span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="readonly" tabindex="-1">Readonly <a class="header-anchor" href="#readonly" aria-hidden="true">#</a></h2><ol><li>将类型 T的所有属性标记为只读属性</li><li>定义后，不能改变属性值</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Readonly</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">T</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    	</span><span style="color:#F92672;">readonly</span><span style="color:#F8F8F2;"> [</span><span style="color:#A6E22E;text-decoration:underline;">P</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">keyof</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">T</span><span style="color:#F8F8F2;">]</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">T</span><span style="color:#F8F8F2;">[</span><span style="color:#A6E22E;text-decoration:underline;">P</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> userList</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Readonly</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">Person</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    name: </span><span style="color:#E6DB74;">&#39;string&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    gender: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#88846F;">// 0：女， 1：男</span></span>
<span class="line"><span style="color:#F8F8F2;">    age: </span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="pick" tabindex="-1">Pick <a class="header-anchor" href="#pick" aria-hidden="true">#</a></h2><ol><li>从某个类型中指定过滤出某个属性或联合类型属性</li><li>在 Person接⼝中挑出指定属性（过滤）</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Pick</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">T</span><span style="color:#F8F8F2;">, </span><span style="color:#A6E22E;text-decoration:underline;">K</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">extends</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">keyof</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">T</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    	[</span><span style="color:#A6E22E;text-decoration:underline;">P</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">K</span><span style="color:#F8F8F2;">]</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">T</span><span style="color:#F8F8F2;">[</span><span style="color:#A6E22E;text-decoration:underline;">P</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> userList</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Pick</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">Person</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;age&#39;</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    name: </span><span style="color:#E6DB74;">&#39;string&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    age: </span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="record" tabindex="-1">Record <a class="header-anchor" href="#record" aria-hidden="true">#</a></h2><ol><li>根据标记对象的 key，设置对应的 value</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Record</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">K</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">extends</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">keyof</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">any</span><span style="color:#F8F8F2;">, </span><span style="color:#A6E22E;text-decoration:underline;">T</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#A6E22E;text-decoration:underline;">P</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">K</span><span style="color:#F8F8F2;">]</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">T</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#88846F;">// 设置key的属性为gender | name，value的类型是number</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> userList</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Record</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#E6DB74;">&#39;gender&#39;</span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;">&gt; </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    name: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    gender: </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">, </span><span style="color:#88846F;">// 0：女， 1：男</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="keyof" tabindex="-1">keyof <a class="header-anchor" href="#keyof" aria-hidden="true">#</a></h2><ol><li>返回类型或接⼝中字符串索引，并且是联合类型</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">keys</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">keyof</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Person</span></span>
<span class="line"><span style="color:#88846F;">// &quot;name&quot; | &quot;age&quot; | &quot;gender&quot;</span></span>
<span class="line"><span style="color:#88846F;">// 联合类型</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">keys</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;name&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;age&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;gender&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="never" tabindex="-1">never <a class="header-anchor" href="#never" aria-hidden="true">#</a></h2><ol><li>永不存在的值</li><li>never类型可以是任何类型的⼦类型，也可以赋值给任何类型</li><li>但其他类型不能作为 never的⼦类型</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// 任何类型都不能赋值给never类型</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> a</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;123&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> b</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> n</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">never</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> a;</span></span>
<span class="line"><span style="color:#88846F;">// -&gt; Type &#39;string&#39; is not assignable to type &#39;never&#39;.</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> n</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">never</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> b;</span></span>
<span class="line"><span style="color:#88846F;">// -&gt; Type &#39;number&#39; is not assignable to type &#39;never&#39;.</span></span>
<span class="line"><span style="color:#F8F8F2;">n </span><span style="color:#F92672;">as</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">never</span></span>
<span class="line"><span style="color:#88846F;">// -&gt; ok</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="exclude" tabindex="-1">Exclude <a class="header-anchor" href="#exclude" aria-hidden="true">#</a></h2><ol><li>从 T中移除 U中给定的类型</li><li>移除指定类型的某些属性，返回没指定的属性</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// &quot;b&quot; | &quot;d&quot;，相当于&lt;T&gt;属性中不包括的属性，差集</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Type1</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Exclude</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;d&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;f&#39;</span><span style="color:#F8F8F2;">&gt;;</span></span>
<span class="line"><span style="color:#88846F;">// &quot;name&quot; | &quot;gender&quot; | &quot;age&quot;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">keys</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">keyof</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Person</span></span>
<span class="line"><span style="color:#88846F;">// 接口返回类型属性 3个类型的差集，name属性，newPerson就只有name属性</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">interface</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">newPerson</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">extends</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Pick</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">Person</span><span style="color:#F8F8F2;">, </span><span style="color:#A6E22E;text-decoration:underline;">Exclude</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">keys</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;gender&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;age&#39;</span><span style="color:#F8F8F2;">&gt;&gt; {}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="extract" tabindex="-1">Extract <a class="header-anchor" href="#extract" aria-hidden="true">#</a></h2><ol><li>从 T中提取 U中给定的类型</li><li>移除指定类型之外的某些属性，返回指定的属性</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// &quot;a&quot; | &quot;c&quot;，相当于&lt;T&gt;属性中包括的属性，交集</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Type1</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Extract</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;d&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;f&#39;</span><span style="color:#F8F8F2;">&gt;;</span></span>
<span class="line"><span style="color:#88846F;">// &quot;name&quot; | &quot;gender&quot; | &quot;age&quot;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">keys</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">keyof</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Person</span></span>
<span class="line"><span style="color:#88846F;">// 接口返回类型属性 3个类型的交集，</span></span>
<span class="line"><span style="color:#88846F;">// 返回gender、age类型，newPerson就有gender | age属性</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">interface</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">newPerson</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">extends</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Pick</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">Person</span><span style="color:#F8F8F2;">, </span><span style="color:#A6E22E;text-decoration:underline;">Extract</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">keys</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;gender&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;age&#39;</span><span style="color:#F8F8F2;">&gt;&gt; {}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="nonnullable" tabindex="-1">NonNullable <a class="header-anchor" href="#nonnullable" aria-hidden="true">#</a></h2><ol><li>从 T中移除 null和 undefined类型</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// string | number</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">T04</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">NonNullable</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">undefined</span><span style="color:#F8F8F2;">&gt;;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="returntype" tabindex="-1">ReturnType <a class="header-anchor" href="#returntype" aria-hidden="true">#</a></h2><ol><li>获取函数返回值的类型</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">T10</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">ReturnType</span><span style="color:#F8F8F2;">&lt;() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">&gt;;  </span><span style="color:#88846F;">// string</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">T11</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">ReturnType</span><span style="color:#F8F8F2;">&lt;(</span><span style="color:#FD971F;font-style:italic;">s</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">void</span><span style="color:#F8F8F2;">&gt;;  </span><span style="color:#88846F;">// void</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">T15</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">ReturnType</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">any</span><span style="color:#F8F8F2;">&gt;;  </span><span style="color:#88846F;">// any</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">T16</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">ReturnType</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">never</span><span style="color:#F8F8F2;">&gt;;  </span><span style="color:#88846F;">// any</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">T17</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">ReturnType</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">&gt;;  </span><span style="color:#88846F;">// Error</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">T18</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">ReturnType</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">Function</span><span style="color:#F8F8F2;">&gt;;  </span><span style="color:#88846F;">// Error</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="instancetype" tabindex="-1">InstanceType <a class="header-anchor" href="#instancetype" aria-hidden="true">#</a></h2><ol><li>返回构造函数类型的实例类型</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">A</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    name</span><span style="color:#F92672;">:</span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">constructor</span><span style="color:#F8F8F2;">() {}</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">T2</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">InstanceType</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">typeof</span><span style="color:#F8F8F2;"> A&gt;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">B</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">implements</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">T2</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="in" tabindex="-1">In <a class="header-anchor" href="#in" aria-hidden="true">#</a></h2><ol><li>in ⽤来遍历枚举类型</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Keys</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;a&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;b&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">|</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;c&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Obj</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">  {</span></span>
<span class="line"><span style="color:#F8F8F2;">  [</span><span style="color:#A6E22E;text-decoration:underline;">p</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Keys</span><span style="color:#F8F8F2;">]</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">any</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> inS</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Obj</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">:</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="extends" tabindex="-1">extends <a class="header-anchor" href="#extends" aria-hidden="true">#</a></h2><ol><li>泛型继承其他类型，将会约束泛型，必须实现 extends继承的类型属性</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">interface</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Lengthwise</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  length</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">loggingIdentity</span><span style="color:#F8F8F2;">&lt;</span><span style="color:#A6E22E;text-decoration:underline;">T</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">extends</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Lengthwise</span><span style="color:#F8F8F2;">&gt;(</span><span style="color:#FD971F;font-style:italic;">arg</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">T</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">T</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(arg.length);</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> arg;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#A6E22E;">loggingIdentity</span><span style="color:#F8F8F2;">({length: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, value:</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="装饰器" tabindex="-1">装饰器 <a class="header-anchor" href="#装饰器" aria-hidden="true">#</a></h2><ol><li>类装饰器 <ol><li>target: TFunction - 被装饰的类 <ol><li>class Greeting</li></ol></li></ol></li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Greeter</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">greeting</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#A6E22E;">target</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Function</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">target</span><span style="color:#F8F8F2;">.prototype.</span><span style="color:#A6E22E;">greet</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> ()</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">void</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(greeting);</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"><span style="color:#F8F8F2;">  };</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">@</span><span style="color:#A6E22E;">Greeter</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Hello TS!&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Greeting</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">constructor</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 内部实现</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> myGreeting </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Greeting</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">(myGreeting </span><span style="color:#F92672;">as</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">any</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">greet</span><span style="color:#F8F8F2;">(); </span><span style="color:#88846F;">// console output: &#39;Hello TS!&#39;;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><ol start="2"><li>属性装饰器</li><li>target: Object - 被装饰的类 <ol><li>class Person</li></ol></li><li>key: string | symbol - 被装饰类的属性名 <ol><li>name</li></ol></li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">logProperty</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">target</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">any</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">key</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">delete</span><span style="color:#F8F8F2;"> target[key];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> backingField </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;_&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> key;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  Object.</span><span style="color:#A6E22E;">defineProperty</span><span style="color:#F8F8F2;">(target, backingField, {</span></span>
<span class="line"><span style="color:#F8F8F2;">    writable: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    enumerable: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    configurable: </span><span style="color:#AE81FF;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// property getter</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">getter</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;">this</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">any</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> currVal </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">[backingField];</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">\`Get: </span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">key</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;"> =&gt; </span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">currVal</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">\`</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> currVal;</span></span>
<span class="line"><span style="color:#F8F8F2;">  };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// property setter</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">setter</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;">this</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">any</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">newVal</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">any</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">\`Set: </span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">key</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;"> =&gt; </span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">newVal</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">\`</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">[backingField] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> newVal;</span></span>
<span class="line"><span style="color:#F8F8F2;">  };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// Create new property with getter and setter</span></span>
<span class="line"><span style="color:#F8F8F2;">  Object.</span><span style="color:#A6E22E;">defineProperty</span><span style="color:#F8F8F2;">(target, key, {</span></span>
<span class="line"><span style="color:#F8F8F2;">    get: getter,</span></span>
<span class="line"><span style="color:#F8F8F2;">    set: setter,</span></span>
<span class="line"><span style="color:#F8F8F2;">    enumerable: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    configurable: </span><span style="color:#AE81FF;">true</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Person</span><span style="color:#F8F8F2;"> { </span></span>
<span class="line"><span style="color:#F8F8F2;">  @logProperty</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">public</span><span style="color:#F8F8F2;"> name</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">constructor</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">) { </span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> p1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Person</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;semlinker&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">p1.name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;kakuqo&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><ol><li>⽅法装饰器</li><li>target: Object - 被装饰的类 <ol><li>class Task</li></ol></li><li>propertyKey: string | symbol - ⽅法名</li><li>descriptor: TypePropertyDescript - 属性描述符</li></ol><p>i. {</p><p>value: [Function: runTask], writable: true,</p><p>enumerable: false, configurable: true</p><p>}</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">target</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Object</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">propertyKey</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">descriptor</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">PropertyDescriptor</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> originalMethod </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> descriptor.value;</span></span>
<span class="line"><span style="color:#F8F8F2;">  descriptor.</span><span style="color:#A6E22E;">value</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">...</span><span style="color:#FD971F;font-style:italic;">args</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">any</span><span style="color:#F8F8F2;">[]) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;wrapped function: before invoking &quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> propertyKey);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> originalMethod.</span><span style="color:#A6E22E;">apply</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">, args);</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;wrapped function: after invoking &quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> propertyKey);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> result;</span></span>
<span class="line"><span style="color:#F8F8F2;">  };</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Task</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  @log</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">runTask</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">arg</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">any</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">any</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;runTask invoked, args: &quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> arg);</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;finished&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> task </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Task</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> task.</span><span style="color:#A6E22E;">runTask</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;learn ts&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;result: &quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> result);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><ol><li>参数装饰器</li><li>target: Object - 被装饰的类 <ol><li>class Greeter</li></ol></li><li>propertyKey: string | symbol - ⽅法名 <ol><li>undefined</li></ol></li><li>parameterIndex: number - ⽅法中参数的索引值 <ol><li>0</li></ol></li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Log</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">target</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Function</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">key</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">parameterIndex</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">number</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> functionLogged </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> key </span><span style="color:#F92672;">||</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">target</span><span style="color:#F8F8F2;">.prototype.constructor.name;</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">\`The parameter in position </span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">parameterIndex</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;"> at </span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">functionLogged</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;"> has</span></span>
<span class="line"><span style="color:#E6DB74;">	been decorated\`</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">Greeter</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  greeting</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">constructor</span><span style="color:#F8F8F2;">(@Log </span><span style="color:#FD971F;font-style:italic;">phrase</span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">string</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">	</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.greeting </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> phrase; </span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,56),o=[e];function t(r,F,c,i,y,u){return a(),n("div",null,o)}const E=s(p,[["render",t]]);export{b as __pageData,E as default};
