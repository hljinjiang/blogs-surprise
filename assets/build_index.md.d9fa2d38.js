import{_ as s,c as n,o as a,a as l}from"./app.212a314b.js";const p="/assets/webpack_build.71da5b2f.png",e="/assets/loaders.f930a1dc.png",o="/assets/plugins.57ec5236.png",q=JSON.parse('{"title":"Webpack","description":"","frontmatter":{},"headers":[{"level":2,"title":"Loader","slug":"loader","link":"#loader","children":[]},{"level":2,"title":"Plugin","slug":"plugin","link":"#plugin","children":[]},{"level":2,"title":"Directory","slug":"directory","link":"#directory","children":[]},{"level":2,"title":"Package.json","slug":"package-json","link":"#package-json","children":[]},{"level":2,"title":"Webpack.config.js","slug":"webpack-config-js","link":"#webpack-config-js","children":[]},{"level":2,"title":"大致打包流程","slug":"大致打包流程","link":"#大致打包流程","children":[]}],"relativePath":"build/index.md","lastUpdated":1679023678000}'),F={name:"build/index.md"},c=l('<h1 id="webpack" tabindex="-1">Webpack <a class="header-anchor" href="#webpack" aria-hidden="true">#</a></h1><p>Webpack 会找到 entry 指定的入口文件作为打包入口<br> Webpack 只能理解 JavaScript 和 JSON 文件</p><ul><li>根据入口文件代码中的 import 或 require 的语句解析，推断出来模块依赖，并解析每个模块的资源依赖，形成依赖树</li><li>递归依赖树，找到每个节点对应的资源文件，然后根据每个模块的 rules 匹配文件并执行对应的loaders，将进行资源加载转换，把最后的转换结果进行打包</li></ul><p><img src="'+p+'" alt="webpack.png"></p><h2 id="loader" tabindex="-1">Loader <a class="header-anchor" href="#loader" aria-hidden="true">#</a></h2><p>Loader: 用于资源加载并处理各种语言的转换/编译（例如：将不同语言转换为 JavaScript）</p><ul><li>解析原始文件 -&gt; 匹配rule,loader 编译,代码转换 -&gt; loader 将处理完成后的结果, 交给 webpack进行打包 -&gt; 输出最终文件 bundle.js</li></ul><p><img src="'+e+`" alt="loaders.png"></p><div class="info custom-block"><p class="custom-block-title">自定义loader</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// webpack.config.js 解析 .custom 自定义文件</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">  test:</span><span style="color:#E6DB74;"> /</span><span style="color:#AE81FF;">\\.</span><span style="color:#E6DB74;">custom</span><span style="color:#F92672;">$</span><span style="color:#E6DB74;">/</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  use: [</span><span style="color:#E6DB74;">&quot;./loaders/custom-loader.js&quot;</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">},</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// custom.custom file</span></span>
<span class="line"><span style="color:#F8F8F2;">(()</span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> p </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> window.document.</span><span style="color:#A6E22E;">createElement</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;p&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    p.innerHTML </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;source&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    window.document.</span><span style="color:#A6E22E;">getElementsByTagName</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;body&quot;</span><span style="color:#F8F8F2;">)[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">].</span><span style="color:#A6E22E;">append</span><span style="color:#F8F8F2;">(p);</span></span>
<span class="line"><span style="color:#F8F8F2;">})()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// custom-loader.js</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">module</span><span style="color:#F8F8F2;">.</span><span style="color:#66D9EF;font-style:italic;">exports</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">source</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// 返回 loader 处理后结果，return buffer or string</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> source.</span><span style="color:#A6E22E;">replace</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;source&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;loader处理后的结果&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// output</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">body</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#F92672;">p</span><span style="color:#F8F8F2;">&gt;loader处理后的结果&lt;/</span><span style="color:#F92672;">p</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">body</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div></div><h2 id="plugin" tabindex="-1">Plugin <a class="header-anchor" href="#plugin" aria-hidden="true">#</a></h2><p>Plugin: 用于资源加载以外的其他打包/压缩/文件处理等功能</p><ul><li>plugin通过 webpack 底层的特性来处理相应的钩子，在钩子回调中处理相关任务</li><li>apply 方法有一个参数 compiler，通过 compiler 可以给 webpack 编译打包过程中添加钩子</li></ul><p><img src="`+o+`" alt="plugins.png"></p><div class="info custom-block"><p class="custom-block-title">自定义plugin</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// webpack.config.js  加载CustomPlugin插件</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">  plugins: [</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 自定义plugin，压缩代码</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">CustomPlugin</span><span style="color:#F8F8F2;">(),</span></span>
<span class="line"><span style="color:#F8F8F2;">  ]</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// custom-plugin.js</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> JSZip </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;jszip&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> path </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;path&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> fs </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;fs&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">CustomPlugin</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  zip </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">JSZip</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">constructor</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">props</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {}) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.props </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      dir: </span><span style="color:#E6DB74;">&quot;./dist&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      zipName: </span><span style="color:#E6DB74;">&quot;dist.zip&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">...</span><span style="color:#F8F8F2;">props,</span></span>
<span class="line"><span style="color:#F8F8F2;">    };</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">apply</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">compiler</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 钩子函数执行回调</span></span>
<span class="line"><span style="color:#F8F8F2;">    compiler.hooks.afterEmit.</span><span style="color:#A6E22E;">tap</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;CustomPlugin&quot;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FD971F;font-style:italic;">compilation</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (fs.</span><span style="color:#A6E22E;">existsSync</span><span style="color:#F8F8F2;">(path.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.props.dir))) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">toZip</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">readDir</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">obj</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">nowPath</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 读取目录中的所有文件及文件夹（同步操作）</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> files </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> fs.</span><span style="color:#A6E22E;">readdirSync</span><span style="color:#F8F8F2;">(nowPath);</span></span>
<span class="line"><span style="color:#F8F8F2;">    files.</span><span style="color:#A6E22E;">forEach</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">fileName</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">index</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> fillPath </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> nowPath </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;/&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> fileName;</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#88846F;">// 获取一个文件的属性</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> file </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> fs.</span><span style="color:#A6E22E;">statSync</span><span style="color:#F8F8F2;">(fillPath);</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#88846F;">// 如果是目录的话，继续查询</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (file.</span><span style="color:#A6E22E;">isDirectory</span><span style="color:#F8F8F2;">()) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#88846F;">// 压缩对象中生成该目录</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> dirList </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.zip.</span><span style="color:#A6E22E;">folder</span><span style="color:#F8F8F2;">(fileName);</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#88846F;">// 重新检索目录文件</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">readDir</span><span style="color:#F8F8F2;">(dirList, fillPath);</span></span>
<span class="line"><span style="color:#F8F8F2;">      } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#88846F;">// 压缩目录添加文件</span></span>
<span class="line"><span style="color:#F8F8F2;">        obj.</span><span style="color:#A6E22E;">file</span><span style="color:#F8F8F2;">(fileName, fs.</span><span style="color:#A6E22E;">readFileSync</span><span style="color:#F8F8F2;">(fillPath));</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">    });</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">toZip</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">readDir</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.zip, path.</span><span style="color:#A6E22E;">resolve</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.props.dir));</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 压缩</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.zip</span></span>
<span class="line"><span style="color:#F8F8F2;">      .</span><span style="color:#A6E22E;">generateAsync</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#88846F;">// 压缩类型选择nodebuffer，在回调函数中会返回zip压缩包的Buffer的值，再利用fs保存至本地</span></span>
<span class="line"><span style="color:#F8F8F2;">        type: </span><span style="color:#E6DB74;">&quot;nodebuffer&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#88846F;">// 压缩算法</span></span>
<span class="line"><span style="color:#F8F8F2;">        compression: </span><span style="color:#E6DB74;">&quot;DEFLATE&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        compressionOptions: {</span></span>
<span class="line"><span style="color:#F8F8F2;">          level: </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        },</span></span>
<span class="line"><span style="color:#F8F8F2;">      })</span></span>
<span class="line"><span style="color:#F8F8F2;">      .</span><span style="color:#A6E22E;">then</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">content</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#88846F;">// 将buffer写入.zip</span></span>
<span class="line"><span style="color:#F8F8F2;">        fs.</span><span style="color:#A6E22E;">writeFile</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.props.zipName, content, (</span><span style="color:#FD971F;font-style:italic;">err</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">!</span><span style="color:#F8F8F2;">err) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.props.zipName </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;压缩成功&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">          } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">            console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.props.zipName </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;压缩失败&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">          }</span></span>
<span class="line"><span style="color:#F8F8F2;">        });</span></span>
<span class="line"><span style="color:#F8F8F2;">      });</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">module</span><span style="color:#F8F8F2;">.</span><span style="color:#66D9EF;font-style:italic;">exports</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> CustomPlugin;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br></div></div></div><h2 id="directory" tabindex="-1">Directory <a class="header-anchor" href="#directory" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">directory</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">├─ dist                 # 打包dist</span></span>
<span class="line"><span style="color:#F8F8F2;">├─ public               # 静态公共资源</span></span>
<span class="line"><span style="color:#F8F8F2;">│  ├─ index.html        # HTML</span></span>
<span class="line"><span style="color:#F8F8F2;">├─ loaders              # 自定义loader</span></span>
<span class="line"><span style="color:#F8F8F2;">│  ├─ custom</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">loader.js  # custom</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">loader.js</span></span>
<span class="line"><span style="color:#F8F8F2;">├─ plugins              # 自定义plugin</span></span>
<span class="line"><span style="color:#F8F8F2;">│  ├─ custom</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">plugin.js  # custom</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">plugin.js</span></span>
<span class="line"><span style="color:#F8F8F2;">├─ src                  # 源文件</span></span>
<span class="line"><span style="color:#F8F8F2;">│  ├─ custom.custom     # 未知文件，通过自定义loader进行解析</span></span>
<span class="line"><span style="color:#F8F8F2;">│  ├─ index.js          # index.js     入口</span></span>
<span class="line"><span style="color:#F8F8F2;">│  ├─ two</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">entry.js      # two</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">entry.js 入口</span></span>
<span class="line"><span style="color:#F8F8F2;">│  ├─ vue_main.js       # vue_main.js  入口</span></span>
<span class="line"><span style="color:#F8F8F2;">├─ webpack.config.js    # webpack config</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></div><h2 id="package-json" tabindex="-1">Package.json <a class="header-anchor" href="#package-json" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">package.json</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">&quot;name&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;surprise&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">&quot;version&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;1.0.0&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">&quot;description&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;webpack-config&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">&quot;main&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;/src/index.js&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">&quot;scripts&quot;</span><span style="color:#F8F8F2;">: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">&quot;dev&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;webpack serve --mode=development --node-env development --progress&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">&quot;build:prod&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;webpack --mode=production --node-env production --progress&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">&quot;build:dev&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;webpack --mode=development --node-env development --progress&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">&quot;homepage&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;https://github.com/tera-li/webpack-config#readme&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">&quot;devDependencies&quot;</span><span style="color:#F8F8F2;">: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">&quot;@babel/core&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;^7.20.5&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">&quot;@babel/preset-env&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;^7.20.2&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">&quot;babel-loader&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;^9.1.0&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">&quot;css-loader&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;^6.7.3&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">&quot;html-webpack-plugin&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;^5.5.0&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">&quot;jszip&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;^3.10.1&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">&quot;style-loader&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;^3.3.1&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">&quot;ts-loader&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;^9.4.2&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">&quot;typescript&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;^4.9.4&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">&quot;vue-loader&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;^17.0.1&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">&quot;webpack&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;^5.75.0&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">&quot;webpack-cli&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;^5.0.1&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">&quot;webpack-dev-server&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;^4.11.1&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">&quot;dependencies&quot;</span><span style="color:#F8F8F2;">: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">&quot;vue&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#CFCFC2;">&quot;^3.2.45&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div></div><h2 id="webpack-config-js" tabindex="-1">Webpack.config.js <a class="header-anchor" href="#webpack-config-js" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">webpack.config.js</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// 配置index.html页面的入口，自动在内存中根据指定页面生成一个内存页面</span></span>
<span class="line"><span style="color:#88846F;">// 自动把打包好的 bundle 追加到html中</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> htmlWebpackPlugin </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;html-webpack-plugin&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> { VueLoaderPlugin } </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;vue-loader/dist/index&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> CustomPlugin </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">require</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;./plugins/custom-plugin&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">module</span><span style="color:#F8F8F2;">.</span><span style="color:#66D9EF;font-style:italic;">exports</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  mode: p<wbr>rocess.env.NODE_ENV,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// 入口，指示 webpack 应该使用哪个模块，来作为构建其内部 依赖图(dependency graph) 的开始</span></span>
<span class="line"><span style="color:#F8F8F2;">  entry: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    vue_main: __dirname </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;/src/vue_main.js&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    main: __dirname </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;/src/index.js&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    two_entry: __dirname </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;/src/two-entry.js&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// 输出，告诉 webpack 在哪里输出它所创建的 bundle，以及如何命名这些文件</span></span>
<span class="line"><span style="color:#F8F8F2;">  output: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 打包输出路径</span></span>
<span class="line"><span style="color:#F8F8F2;">    path: __dirname </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;/dist&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 文件名</span></span>
<span class="line"><span style="color:#F8F8F2;">    filename: </span><span style="color:#E6DB74;">&quot;js/[contenthash].js&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 在生成文件之前清空 output 目录</span></span>
<span class="line"><span style="color:#F8F8F2;">    clean: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  module: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    rules: [</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#88846F;">// webpack 只能理解 JavaScript 和 JSON 文件</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#88846F;">// loader将处理import,require等其它的类型文件，比如对.css,Image,.ts转换成 Webpack能够识别的方式</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#88846F;">// 原始文件 -&gt; 匹配rule,loader 编译,代码转换 -&gt; loader 处理完成后的结果,交给 webpack进行打包 -&gt; 输出最终文件 bundle.js</span></span>
<span class="line"><span style="color:#F8F8F2;">      {</span></span>
<span class="line"><span style="color:#F8F8F2;">        test:</span><span style="color:#E6DB74;"> /</span><span style="color:#AE81FF;">\\.</span><span style="color:#E6DB74;">css</span><span style="color:#F92672;">$</span><span style="color:#E6DB74;">/</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#88846F;">// 从后向前处理，处理完成后交由 webpack打包合并到 bundle.js中</span></span>
<span class="line"><span style="color:#F8F8F2;">        use: [</span><span style="color:#E6DB74;">&quot;style-loader&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;css-loader&quot;</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">      },</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#88846F;">// 解析.ts</span></span>
<span class="line"><span style="color:#F8F8F2;">      {</span></span>
<span class="line"><span style="color:#F8F8F2;">        test:</span><span style="color:#E6DB74;"> /</span><span style="color:#AE81FF;">\\.</span><span style="color:#E6DB74;">ts</span><span style="color:#F92672;">$</span><span style="color:#E6DB74;">/</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        use: [</span><span style="color:#E6DB74;">&quot;ts-loader&quot;</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">      },</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#88846F;">// 解析.js</span></span>
<span class="line"><span style="color:#F8F8F2;">      {</span></span>
<span class="line"><span style="color:#F8F8F2;">        test:</span><span style="color:#E6DB74;"> /</span><span style="color:#AE81FF;">\\.</span><span style="color:#E6DB74;">m</span><span style="color:#F92672;">?</span><span style="color:#E6DB74;">js</span><span style="color:#F92672;">$</span><span style="color:#E6DB74;">/</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        exclude:</span><span style="color:#E6DB74;"> /node_modules/</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        use: {</span></span>
<span class="line"><span style="color:#F8F8F2;">          loader: </span><span style="color:#E6DB74;">&quot;babel-loader&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">          options: {</span></span>
<span class="line"><span style="color:#F8F8F2;">            cacheDirectory: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#88846F;">// 缓存babel-loader 的执行结果</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#88846F;">// 之后的 webpack 构建，将会尝试读取缓存，来避免在每次执行时，可能产生的、高性能消耗的 Babel 重新编译过程(recompilation process)</span></span>
<span class="line"><span style="color:#F8F8F2;">            presets: [</span><span style="color:#E6DB74;">&quot;@babel/preset-env&quot;</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">          },</span></span>
<span class="line"><span style="color:#F8F8F2;">        },</span></span>
<span class="line"><span style="color:#F8F8F2;">      },</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#88846F;">// 解析.vue</span></span>
<span class="line"><span style="color:#F8F8F2;">      {</span></span>
<span class="line"><span style="color:#F8F8F2;">        test:</span><span style="color:#E6DB74;"> /</span><span style="color:#AE81FF;">\\.</span><span style="color:#E6DB74;">vue</span><span style="color:#F92672;">$</span><span style="color:#E6DB74;">/</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        use: [</span><span style="color:#E6DB74;">&quot;vue-loader&quot;</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">      },</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#88846F;">// 解析 .custom 自定义文件</span></span>
<span class="line"><span style="color:#F8F8F2;">      {</span></span>
<span class="line"><span style="color:#F8F8F2;">        test:</span><span style="color:#E6DB74;"> /</span><span style="color:#AE81FF;">\\.</span><span style="color:#E6DB74;">custom</span><span style="color:#F92672;">$</span><span style="color:#E6DB74;">/</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        use: [</span><span style="color:#E6DB74;">&quot;./loaders/custom-loader.js&quot;</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">      },</span></span>
<span class="line"><span style="color:#F8F8F2;">    ],</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// 扩展 webpack 功能，打包优化，资源管理，注入环境变量</span></span>
<span class="line"><span style="color:#F8F8F2;">  plugins: [</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 生成一个 HTML5 文件， 在 body 中使用 script 标签引入你所有 webpack 生成的 bundle</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">htmlWebpackPlugin</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">      template: __dirname </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;/public/index.html&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">      filename: </span><span style="color:#E6DB74;">&quot;index.html&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    }),</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">VueLoaderPlugin</span><span style="color:#F8F8F2;">(),</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 自定义plugin，压缩代码</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">CustomPlugin</span><span style="color:#F8F8F2;">(),</span></span>
<span class="line"><span style="color:#F8F8F2;">  ],</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// 配置模块如何解析</span></span>
<span class="line"><span style="color:#F8F8F2;">  resolve: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 别名</span></span>
<span class="line"><span style="color:#F8F8F2;">    alias: {</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#E6DB74;">&quot;@&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&quot;/src&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 尝试按顺序解析这些后缀名，引入文件就可以不带后缀</span></span>
<span class="line"><span style="color:#F8F8F2;">    extensions: [</span><span style="color:#E6DB74;">&quot;.js&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;.json&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;.vue&quot;</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// 开发工具</span></span>
<span class="line"><span style="color:#F8F8F2;">  devtool: p<wbr>rocess.env.NODE_ENV </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;development&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;source-map&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// 开发服务配置</span></span>
<span class="line"><span style="color:#F8F8F2;">  devServer: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    host: </span><span style="color:#E6DB74;">&quot;localhost&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#88846F;">// 启动服务器域名</span></span>
<span class="line"><span style="color:#F8F8F2;">    port: </span><span style="color:#E6DB74;">&quot;3000&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#88846F;">// 启动服务器端口号</span></span>
<span class="line"><span style="color:#F8F8F2;">    open: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">, </span><span style="color:#88846F;">// 是否自动打开浏览器</span></span>
<span class="line"><span style="color:#F8F8F2;">    hot: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">, </span><span style="color:#88846F;">// 开启HMR功能</span></span>
<span class="line"><span style="color:#F8F8F2;">    http2: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    https: </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// 从输出的 bundle 中排除依赖</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// 防止将某些 import 的包(package)打包到 bundle 中，而是在运行时(runtime)再去从外部获取这些扩展依赖</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// 例如，从 CDN 引入 Vue，而不是把它打包：</span></span>
<span class="line"><span style="color:#F8F8F2;">  externals:</span></span>
<span class="line"><span style="color:#F8F8F2;">    p<wbr>rocess.env.NODE_ENV </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;development&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;"> {}</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">          vue: </span><span style="color:#E6DB74;">&quot;Vue&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        },</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// optimization: {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">//   minimize: false,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// },</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br></div></div></div><h2 id="大致打包流程" tabindex="-1">大致打包流程 <a class="header-anchor" href="#大致打包流程" aria-hidden="true">#</a></h2><ol><li>载入 webpack 核心模块，创建 compiler 对象 <ol><li>将 entry,output,module,plugins等参数和 shell 上的参数一并传入 compiler</li></ol></li><li>使用 compiler 对象开始编译整个项目 <ol><li>调用 compiler.run() 方法进行编译</li></ol></li><li>从入口文件开始，解析模块依赖，形成依赖关系树 <ol><li>根据 entry 配置找到入口文件</li><li>依次递归所有依赖，将依赖关系树的每个模块交给不同的loader(对源代码转换为webpack能够识别的文件)进行处理</li></ol></li><li>递归完成后，整理合并 Loader 处理完的结果，将打包结果输出到 output 目录</li></ol><p>参考链接1⃣️：<a href="https://www.webpackjs.com/" target="_blank" rel="noreferrer">https://www.webpackjs.com/</a><br> 参考链接2⃣️：<a href="https://github.com/tera-li/webpack-config" target="_blank" rel="noreferrer">https://github.com/tera-li/webpack-config</a></p>`,23),r=[c];function t(i,y,u,b,m,d){return a(),n("div",null,r)}const D=s(F,[["render",t]]);export{q as __pageData,D as default};
