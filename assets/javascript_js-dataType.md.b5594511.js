import{_ as s,c as n,o as a,a as l}from"./app.1870fd30.js";const d=JSON.parse('{"title":"JavaScript Data Type","description":"","frontmatter":{},"headers":[{"level":2,"title":"ArrayBuffer","slug":"arraybuffer","link":"#arraybuffer","children":[]},{"level":2,"title":"TypedArray","slug":"typedarray","link":"#typedarray","children":[]},{"level":2,"title":"DataView","slug":"dataview","link":"#dataview","children":[]},{"level":2,"title":"Blob","slug":"blob","link":"#blob","children":[]}],"relativePath":"javascript/js-dataType.md","lastUpdated":1678027401000}'),p={name:"javascript/js-dataType.md"},e=l(`<h1 id="javascript-data-type" tabindex="-1">JavaScript Data Type <a class="header-anchor" href="#javascript-data-type" aria-hidden="true">#</a></h1><h2 id="arraybuffer" tabindex="-1">ArrayBuffer <a class="header-anchor" href="#arraybuffer" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">简介</p><p>通用的、固定长度的原始二进制数据缓冲区，用来存储二进制的<br> 不能直接操作 ArrayBuffer 的内容，而是要通过 类型化数组对象 (TypedArray) or 数据视图 (DataView)来操作</p></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// 创建一个ArrayBuffer，大小以字节为单位</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> buffer </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">ArrayBuffer</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#88846F;">// 表示 ArrayBuffer 的 byte 的大小</span></span>
<span class="line"><span style="color:#F8F8F2;">buffer.byteLength</span></span>
<span class="line"><span style="color:#88846F;">// 返回一个新的 ArrayBuffer，内容为截取的副本</span></span>
<span class="line"><span style="color:#F8F8F2;">buffer.</span><span style="color:#A6E22E;">slice</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">// 返回 true，判断传入的参数值是否是 类型化数组对象 (TypedArray) or 数据视图 (DataView)</span></span>
<span class="line"><span style="color:#F8F8F2;">ArrayBuffer.</span><span style="color:#A6E22E;">isView</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Int32Array</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"><span style="color:#F8F8F2;">ArrayBuffer.</span><span style="color:#A6E22E;">isView</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">DataView</span><span style="color:#F8F8F2;">(buffer))</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>参考链接：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer</a></p><h2 id="typedarray" tabindex="-1">TypedArray <a class="header-anchor" href="#typedarray" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">简介</p><p>TypedArray 对象描述了底层 二进制数据缓冲区(ArrayBuffer) 的类数组视图<br> 没有称为 TypedArray 的全局属性，也没有直接可用的 TypedArray 构造函数，作为抽象类只能被其子类使用<br> 语法与普通数组完全没有什么不同，只不过它直接针对内存进行操作，而且每个成员都有确定的数据类型</p></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai has-highlighted-lines"><code><span class="line highlighted"><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> 类型数组对象</span></span>
<span class="line"><span style="color:#F8F8F2;">Int8Array: 8位有符号整数，长度1个字节，1</span><span style="color:#A6E22E;">个字节1个元素</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">128</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">~</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">127</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">Uint8Array: 8位无符号整数，长度1个字节，1</span><span style="color:#A6E22E;">个字节1个元素</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">~</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">255</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">Int16Array: 16位有符号整数，长度2个字节，2</span><span style="color:#A6E22E;">个字节1个元素</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">32768</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">~</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">32767</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">Uint16Array: 16位无符号整数，长度2个字节，2</span><span style="color:#A6E22E;">个字节1个元素</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">~</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">65535</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">Int32Array: 32位有符号整数，长度4个字节，4</span><span style="color:#A6E22E;">个字节1个元素</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">2147483648</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">~</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">2147483647</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">Uint32Array: 32位无符号整数，长度4个字节，4</span><span style="color:#A6E22E;">个字节1个元素</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">~</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">4294967295</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">Float32Array: 32位浮点数，长度4个字节，4个字节1个元素</span></span>
<span class="line"><span style="color:#F8F8F2;">Float64Array: 64位浮点数，长度8个字节，8个字节1个元素</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> 数据大小</span></span>
<span class="line"><span style="color:#F8F8F2;">8</span><span style="color:#A6E22E;">bit</span><span style="color:#F8F8F2;">(位)</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">1</span><span style="color:#A6E22E;">Byte</span><span style="color:#F8F8F2;">(字节)</span></span>
<span class="line"><span style="color:#F8F8F2;">1024</span><span style="color:#A6E22E;">Byte</span><span style="color:#F8F8F2;">(字节)</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">1KB</span></span>
<span class="line"><span style="color:#F8F8F2;">1024KB</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">1MB</span></span>
<span class="line"><span style="color:#F8F8F2;">1024MB</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">1GB</span></span>
<span class="line"><span style="color:#F8F8F2;">1024GB</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">1TB</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> 使用</span></span>
<span class="line"><span style="color:#88846F;">// 返回数组中元素的字节数 (一个元素代表几个字节)</span></span>
<span class="line"><span style="color:#F8F8F2;">Int8Array.BYTES_PER_ELEMENT</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 以长度参数构造对象</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> int8 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Int8Array</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">int8[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">42</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 以数组构造对象</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> arr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Int8Array</span><span style="color:#F8F8F2;">([</span><span style="color:#AE81FF;">21</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">31</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 从另一数组构造对象</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Int8Array</span><span style="color:#F8F8F2;">([</span><span style="color:#AE81FF;">21</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">31</span><span style="color:#F8F8F2;">]);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> y </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Int8Array</span><span style="color:#F8F8F2;">(x);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 从 ArrayBuffer 构造对象</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> buffer </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">ArrayBuffer</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#88846F;">// buffer byteOffset (选择buffer从左开始的起始位置的偏移) length (选取长度)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> z </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Int8Array</span><span style="color:#F8F8F2;">(buffer, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p>参考链接：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray</a></p><h2 id="dataview" tabindex="-1">DataView <a class="header-anchor" href="#dataview" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">简介</p><p>视图是一个可以从 二进制ArrayBuffer 对象中读写多种数值类型的底层接口，使用它时，不用考虑不同平台的字节序问题</p></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai has-highlighted-lines"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> buffer </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">ArrayBuffer</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">16</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#88846F;">// 创建视图</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> view1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">DataView</span><span style="color:#F8F8F2;">(buffer);</span></span>
<span class="line"><span style="color:#F8F8F2;">view1.</span><span style="color:#A6E22E;">setInt8</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">12</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">view1.</span><span style="color:#A6E22E;">getInt8</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">setInt8: 写入1个字节的8位整数。</span></span>
<span class="line"><span style="color:#F8F8F2;">setUint8: 写入1个字节的8位无符号整数。</span></span>
<span class="line"><span style="color:#F8F8F2;">setInt16: 写入2个字节的16位整数。</span></span>
<span class="line"><span style="color:#F8F8F2;">setUint16: 写入2个字节的16位无符号整数。</span></span>
<span class="line"><span style="color:#F8F8F2;">setInt32: 写入4个字节的32位整数。</span></span>
<span class="line"><span style="color:#F8F8F2;">setUint32: 写入4个字节的32位无符号整数。</span></span>
<span class="line"><span style="color:#F8F8F2;">setFloat32: 写入4个字节的32位浮点数。</span></span>
<span class="line"><span style="color:#F8F8F2;">setFloat64: 写入8个字节的64位浮点数。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">getInt8: 读取1个字节，返回一个8位整数。</span></span>
<span class="line"><span style="color:#F8F8F2;">getUint8: 读取1个字节，返回一个无符号的8位整数。</span></span>
<span class="line"><span style="color:#F8F8F2;">getInt16: 读取2个字节，返回一个16位整数。</span></span>
<span class="line"><span style="color:#F8F8F2;">getUint16: 读取2个字节，返回一个无符号的16位整数。</span></span>
<span class="line"><span style="color:#F8F8F2;">getInt32: 读取4个字节，返回一个32位整数。</span></span>
<span class="line"><span style="color:#F8F8F2;">getUint32: 读取4个字节，返回一个无符号的32位整数。</span></span>
<span class="line"><span style="color:#F8F8F2;">getFloat32: 读取4个字节，返回一个32位浮点数。</span></span>
<span class="line"><span style="color:#F8F8F2;">getFloat64: 读取8个字节，返回一个64位浮点数。</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> TextDecoder 和 TextEncoder</span></span>
<span class="line"><span style="color:#88846F;">// 如果二进制是包含文本数据的文件，可将值读取为实际的 JavaScript 字符串</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 默认使用 UTF-8 编码将码位流转换成字节流</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> encoder </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">TextEncoder</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;UTF-8&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#88846F;">// 接受一个字符串作为输入，返回一个对参数中给定的文本的编码后的 Uint8Array 类型数组</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> bufferArray </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> encoder.</span><span style="color:#A6E22E;">encode</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;€&#39;</span><span style="color:#F8F8F2;">); </span><span style="color:#88846F;">// Uint8Array(3) [226, 130, 172]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 文本解码器，解码器将字节流作为输入，并提供码位流作为输出 (UTF-8、ISO-8859-2、KOI8-R、GBK)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> decoder </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">TextDecoder</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;UTF-8&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#88846F;">// 返回一个字符串，其包含作为参数传递的缓冲区解码后的文本</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> str </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> decoder.</span><span style="color:#A6E22E;">decode</span><span style="color:#F8F8F2;">(bufferArray); </span><span style="color:#88846F;">// String &quot;€&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p>参考链接：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/DataView" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/DataView</a></p><h2 id="blob" tabindex="-1">Blob <a class="header-anchor" href="#blob" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">简介</p><p>表示一个不可变、原始数据的类文件对象<br> 可以看作是存放二进制数据的容器，设置二进制数据的MIME类型</p></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai has-highlighted-lines"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> array </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;hello world&#39;</span></span>
<span class="line"><span style="color:#88846F;">// 创建Blob对象，传入Blob/BufferSource/String类型的数组 (必须由数组包裹)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> blob </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Blob</span><span style="color:#F8F8F2;">([array], { type: </span><span style="color:#E6DB74;">&#39;text/plain&#39;</span><span style="color:#F8F8F2;">})</span></span>
<span class="line"><span style="color:#F8F8F2;">blob.size                       </span><span style="color:#88846F;">// 返回 Blob 的字节数</span></span>
<span class="line"><span style="color:#F8F8F2;">blob.type                       </span><span style="color:#88846F;">// 返回 Blob 对象的 type 属性给出文件的 MIME 类型</span></span>
<span class="line"><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> blob.</span><span style="color:#A6E22E;">text</span><span style="color:#F8F8F2;">()               </span><span style="color:#88846F;">// hello world</span></span>
<span class="line"><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> blob.</span><span style="color:#A6E22E;">arrayBuffer</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> blob.</span><span style="color:#A6E22E;">slice</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">text</span><span style="color:#F8F8F2;">()    </span><span style="color:#88846F;">// 截取 blob 对象指定字节范围</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> URL解析Blob，传入 File 对象、Blob 对象</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> url </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> URL.</span><span style="color:#A6E22E;">createObjectURL</span><span style="color:#F8F8F2;">(blob)       </span><span style="color:#88846F;">// URL显示 hello world</span></span>
<span class="line"><span style="color:#F8F8F2;">URL.</span><span style="color:#A6E22E;">revokeObjectURL</span><span style="color:#F8F8F2;">(url)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> FileReader解析Blob</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> reader </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">FileReader</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">reader.</span><span style="color:#A6E22E;">onload</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">evt</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(evt.target.result);</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#88846F;">// text显示 hello world</span></span>
<span class="line"><span style="color:#F8F8F2;">reader.</span><span style="color:#A6E22E;">readAsText</span><span style="color:#F8F8F2;">(blob);</span></span>
<span class="line"><span style="color:#88846F;">// arrayBuffer</span></span>
<span class="line"><span style="color:#F8F8F2;">reader.</span><span style="color:#A6E22E;">readAsArrayBuffer</span><span style="color:#F8F8F2;">(blob);</span></span>
<span class="line"><span style="color:#88846F;">// URL显示 hello world</span></span>
<span class="line"><span style="color:#F8F8F2;">reader.</span><span style="color:#A6E22E;">readAsDataURL</span><span style="color:#F8F8F2;">(blob);</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> 区别</span></span>
<span class="line"><span style="color:#F8F8F2;">createObjectURL</span></span>
<span class="line"><span style="color:#E6DB74;">&#39;blob:https://developer.mozilla.org/9277fcfa-27d9-4541-a399-5671a944ebda&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#AE81FF;">1.</span><span style="color:#F8F8F2;"> 生成本地内存 URL 地址</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#AE81FF;">2.</span><span style="color:#F8F8F2;"> 需要撤销 revoke 它们，手动释放内存，不然只有当 doucment 销毁时才清除</span></span>
<span class="line"><span style="color:#F8F8F2;">readAsDataURL</span></span>
<span class="line"><span style="color:#E6DB74;">&#39;data:text/plain;base64,aGVsbG8gd29ybGQ=&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#AE81FF;">1.</span><span style="color:#F8F8F2;"> 生成本地内存 base64 格式</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#AE81FF;">2.</span><span style="color:#F8F8F2;"> 无需撤销，自动释放内存，但对内存较大的Blob编码时会消耗更多性能和内存</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>参考链接：<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Blob" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/API/Blob</a></p>`,17),o=[e];function r(F,c,t,y,i,b){return a(),n("div",null,o)}const m=s(p,[["render",r]]);export{d as __pageData,m as default};
