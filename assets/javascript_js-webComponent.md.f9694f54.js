import{_ as s,c as n,o as a,a as l}from"./app.c6789619.js";const p="/assets/clipboard.dc69a149.jpg",e="/assets/subfield.0f43fbc1.jpg",E=JSON.parse('{"title":"JavaScript Web Components","description":"","frontmatter":{},"headers":[{"level":2,"title":"Custom Elements","slug":"custom-elements","link":"#custom-elements","children":[]},{"level":2,"title":"Shadow DOM","slug":"shadow-dom","link":"#shadow-dom","children":[]},{"level":2,"title":"Templates and Slots","slug":"templates-and-slots","link":"#templates-and-slots","children":[]},{"level":2,"title":"组织化架构","slug":"组织化架构","link":"#组织化架构","children":[]}],"relativePath":"javascript/js-webComponent.md","lastUpdated":1680074913000}'),o={name:"javascript/js-webComponent.md"},t=l(`<h1 id="javascript-web-components" tabindex="-1">JavaScript Web Components <a class="header-anchor" href="#javascript-web-components" aria-hidden="true">#</a></h1><h2 id="custom-elements" tabindex="-1">Custom Elements <a class="header-anchor" href="#custom-elements" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">简介</p><p>自定义元素<br> 允许您定义 custom elements 及其行为，然后可以在您的用户界面中按照需要使用它们<br> 自定义标签完成之后，可以正常在HTML中使用</p></div><ul><li>Autonomous custom elements (自定义元素)</li></ul><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">my-element</span><span style="color:#F8F8F2;">&gt;myElement!&lt;/</span><span style="color:#F92672;">my-element</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai has-highlighted-lines"><code><span class="line highlighted"><span style="color:#88846F;">// Custom Elements 继承自 HTMLElement 抽象类</span></span>
<span class="line highlighted"><span style="color:#88846F;">// 创建 自定义元素 可在元素生命周期中执行相关操作</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">MyElement</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">extends</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">HTMLElement</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">constructor</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FD971F;">super</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.style.color </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;red&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 自定义元素第一次被连接到文档 DOM 时被调用</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">connectedCallback</span><span style="color:#F8F8F2;">() { console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;元素已被添加到文档&#39;</span><span style="color:#F8F8F2;">) }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 自定义元素与文档 DOM 断开连接时被调用，如元素被删除 ele.remove()</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">disconnectedCallback</span><span style="color:#F8F8F2;">() { console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;元素从文档移除&#39;</span><span style="color:#F8F8F2;">) }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 自定义元素的所监听的属性被增加、移除或更改时被调用，如 ele.setAttribute(&#39;first&#39;, &#39;value&#39;)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">attributeChangedCallback</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">oldValue</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">newValue</span><span style="color:#F8F8F2;">) {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 返回元素的属性名数组，这些属性变化会被监视</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">static</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">get</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">observedAttributes</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;first&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 自定义元素被移动到新文档时被调用</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">adoptedCallback</span><span style="color:#F8F8F2;">() { console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;当元素被移动到新文档的时&#39;</span><span style="color:#F8F8F2;">) }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#88846F;">// 定义和注册自定义元素(其中必须要有短横线)，用来显示在HTML文档上</span></span>
<span class="line"><span style="color:#F8F8F2;">customElements.</span><span style="color:#A6E22E;">define</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;my-element&#39;</span><span style="color:#F8F8F2;">, MyElement)</span></span>
<span class="line"><span style="color:#88846F;">// 返回以前定义自定义元素的构造函数</span></span>
<span class="line"><span style="color:#F8F8F2;">customElements.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;my-element&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#88846F;">// 当元素被定义时，接口返回一个成功的promise</span></span>
<span class="line"><span style="color:#F8F8F2;">customElements.</span><span style="color:#A6E22E;">whenDefined</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;my-element&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><ul><li>Customized built-in elements (自定义内置元素)</li></ul><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">button</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">is</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;my-button&quot;</span><span style="color:#F8F8F2;">&gt;click!&lt;/</span><span style="color:#F92672;">button</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">p</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">is</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;my-p&quot;</span><span style="color:#F8F8F2;">&gt;This is p!&lt;/</span><span style="color:#F92672;">p</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// 继承自 HTMLButtonElement，并扩展该元素</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">MyButton</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">extends</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">HTMLButtonElement</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">constructor</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FD971F;">super</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#88846F;">// this.disabled = true</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">addEventListener</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;click&#39;</span><span style="color:#F8F8F2;">, (</span><span style="color:#FD971F;font-style:italic;">event</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Hello!&quot;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#88846F;">// 继承 button 元素，拥有 button 元素所有属性</span></span>
<span class="line"><span style="color:#F8F8F2;">customElements.</span><span style="color:#A6E22E;">define</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;my-button&#39;</span><span style="color:#F8F8F2;">, MyButton, { extends: </span><span style="color:#E6DB74;">&#39;button&#39;</span><span style="color:#F8F8F2;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 继承自 HTMLParagraphElement，并扩展该元素</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">MyP</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">extends</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">HTMLParagraphElement</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">constructor</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FD971F;">super</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.style.color </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;red&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#88846F;">// 继承 p 元素，拥有 p 元素所有属性</span></span>
<span class="line"><span style="color:#F8F8F2;">customElements.</span><span style="color:#A6E22E;">define</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;my-p&#39;</span><span style="color:#F8F8F2;">, MyP, { extends: </span><span style="color:#E6DB74;">&#39;p&#39;</span><span style="color:#F8F8F2;"> })</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="shadow-dom" tabindex="-1">Shadow DOM <a class="header-anchor" href="#shadow-dom" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">简介</p><p>影子 DOM<br> shadow dom为封装而生，它可以让一个组件拥有自己的shadow dom树<br> 可封装的 <code>影子DOM树</code> 附加到元素（与主文档 DOM 分开呈现）并可控制其关联的功能<br> 可保持元素的功能私有，私有化脚本和样式，而不用担心与文档的其他部分发生冲突</p></div><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">popup-info</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">data-text</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;this is title!&quot;</span><span style="color:#F8F8F2;">&gt;&lt;/</span><span style="color:#F92672;">popup-info</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// 创建自定义元素</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">PopUpInfo</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">extends</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">HTMLElement</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#66D9EF;font-style:italic;">constructor</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#FD971F;">super</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#88846F;">// 创建 shadow root</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#88846F;">// { mode: open }: shadow root元素可以从 js 外部访问根节点，是shadow tree</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#88846F;">// { mode: closed }: 拒绝从 js 外部访问关闭的shadow root节点，永远是null</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> shadow </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">attachShadow</span><span style="color:#F8F8F2;">({ mode: </span><span style="color:#E6DB74;">&quot;open&quot;</span><span style="color:#F8F8F2;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#88846F;">// 创建span</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> info </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">createElement</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;span&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#88846F;">// 获取属性内容并将其放入文本中</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> text </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">getAttribute</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;data-text&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        info.</span><span style="color:#A6E22E;">setAttribute</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;class&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;info&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        info.textContent </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> text;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#88846F;">// 创建img</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> img </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">createElement</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;img&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        img.src </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;./docs/assets/aperture.svg&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#88846F;">// 创建一些style应用到 shadow dom</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> style </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">createElement</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;style&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        style.textContent </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">\`</span></span>
<span class="line"><span style="color:#E6DB74;">            .info {</span></span>
<span class="line"><span style="color:#E6DB74;">                font-size: 0.8rem;</span></span>
<span class="line"><span style="color:#E6DB74;">                width: 200px;</span></span>
<span class="line"><span style="color:#E6DB74;">                display: inline-block;</span></span>
<span class="line"><span style="color:#E6DB74;">                border: 1px solid black;</span></span>
<span class="line"><span style="color:#E6DB74;">                padding: 10px;</span></span>
<span class="line"><span style="color:#E6DB74;">                background: white;</span></span>
<span class="line"><span style="color:#E6DB74;">                border-radius: 10px;</span></span>
<span class="line"><span style="color:#E6DB74;">                opacity: 0;</span></span>
<span class="line"><span style="color:#E6DB74;">                transition: 0.6s all;</span></span>
<span class="line"><span style="color:#E6DB74;">                position: relative;</span></span>
<span class="line"><span style="color:#E6DB74;">                bottom: 20px;</span></span>
<span class="line"><span style="color:#E6DB74;">                left: 0px;</span></span>
<span class="line"><span style="color:#E6DB74;">                z-index: 3;</span></span>
<span class="line"><span style="color:#E6DB74;">            }</span></span>
<span class="line"><span style="color:#E6DB74;">            img {</span></span>
<span class="line"><span style="color:#E6DB74;">                width: 1.2rem;</span></span>
<span class="line"><span style="color:#E6DB74;">            }</span></span>
<span class="line"><span style="color:#E6DB74;">            img:hover + .info {</span></span>
<span class="line"><span style="color:#E6DB74;">                opacity: 1;</span></span>
<span class="line"><span style="color:#E6DB74;">            }</span></span>
<span class="line"><span style="color:#E6DB74;">        \`</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#88846F;">// 将创建的元素附加到shadow dom</span></span>
<span class="line"><span style="color:#F8F8F2;">        shadow.</span><span style="color:#A6E22E;">append</span><span style="color:#F8F8F2;">(style);</span></span>
<span class="line"><span style="color:#F8F8F2;">        shadow.</span><span style="color:#A6E22E;">append</span><span style="color:#F8F8F2;">(img);</span></span>
<span class="line"><span style="color:#F8F8F2;">        shadow.</span><span style="color:#A6E22E;">append</span><span style="color:#F8F8F2;">(info);</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#88846F;">// ShadowRoot 附加的宿主 DOM 元素，popup-info元素。</span></span>
<span class="line"><span style="color:#F8F8F2;">        shadow.host;</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#88846F;">// ShadowRoot 内部的 DOM 树</span></span>
<span class="line"><span style="color:#F8F8F2;">        shadow.innerHTML;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#88846F;">// 注册自定义元素</span></span>
<span class="line"><span style="color:#F8F8F2;">customElements.</span><span style="color:#A6E22E;">define</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;popup-info&#39;</span><span style="color:#F8F8F2;">, PopUpInfo);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div><h2 id="templates-and-slots" tabindex="-1">Templates and Slots <a class="header-anchor" href="#templates-and-slots" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">简介</p><p>HTML 模板<br><code>&lt;template /&gt;</code> 和 <code>&lt;slot /&gt;</code> 元素使您可以编写不在呈现页面中显示的标记模板</p><p><code>&lt;template /&gt;</code>是一种用于保存客户端内容机制，该内容在加载页面不会呈现<br> 将模板视为一个可存储在文档中以便后续使用的内容片段</p><ol><li>template不会在文档中显示，除非被插入使用</li><li>template的content属性可看作DocumentFragment相当于一个DOM包装器片段</li><li>template中的元素也会被添加到shadow DOM中，并且生效</li></ol></div><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki monokai has-diff"><code><span class="line"><span style="color:#F8F8F2;">&lt;!</span><span style="color:#F92672;">DOCTYPE</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">html</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">html</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#F92672;">body</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">&lt;!-- 使用自定义元素 --&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    &lt;</span><span style="color:#F92672;">my-ele</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">myELeClass</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#88846F;">&lt;!-- 定义元素内容 --&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">      &lt;</span><span style="color:#F92672;">h1</span><span style="color:#F8F8F2;">&gt;h1&lt;/</span><span style="color:#F92672;">h1</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">      &lt;</span><span style="color:#F92672;">h2</span><span style="color:#F8F8F2;">&gt;h2&lt;/</span><span style="color:#F92672;">h2</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">      &lt;</span><span style="color:#F92672;">span</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">slot</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;myText&quot;</span><span style="color:#F8F8F2;">&gt;Let&#39;s have some different text!&lt;/</span><span style="color:#F92672;">span</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">      &lt;</span><span style="color:#F92672;">h1</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">slot</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;myText2&quot;</span><span style="color:#F8F8F2;">&gt;Let&#39;s have some different text!&lt;/</span><span style="color:#F92672;">h1</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    &lt;/</span><span style="color:#F92672;">my-ele</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">&lt;!-- 定义模版，将模板作为shadow dom的内容 --&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    &lt;</span><span style="color:#F92672;">template</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">id</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;template&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#88846F;">&lt;!-- 定义默认插槽、具名插槽 --&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">      &lt;</span><span style="color:#F92672;">slot</span><span style="color:#F8F8F2;">&gt;&lt;/</span><span style="color:#F92672;">slot</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">      &lt;</span><span style="color:#F92672;">slot</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">name</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;myText&quot;</span><span style="color:#F8F8F2;">&gt;&lt;/</span><span style="color:#F92672;">slot</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">      &lt;</span><span style="color:#F92672;">slot</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">name</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;myText2&quot;</span><span style="color:#F8F8F2;">&gt;&lt;/</span><span style="color:#F92672;">slot</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">      &lt;</span><span style="color:#F92672;">style</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#A6E22E;">:host</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#66D9EF;font-style:italic;">background</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">rgb</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">239</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">131</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">59</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#66D9EF;font-style:italic;">user-select</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">none</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">      &lt;/</span><span style="color:#F92672;">style</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    &lt;/</span><span style="color:#F92672;">template</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    &lt;</span><span style="color:#F92672;">script</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span><span style="color:#66D9EF;font-style:italic;">class</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;text-decoration:underline;">myEle</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">extends</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">HTMLElement</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#A6E22E;">connectedCallback</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#88846F;">// 定义shadow后，内容只能挂在到shadow上</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> shadow </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">attachShadow</span><span style="color:#F8F8F2;">({ mode: </span><span style="color:#E6DB74;">&quot;open&quot;</span><span style="color:#F8F8F2;"> });</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> template </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">getElementById</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;template&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#88846F;">// 模版使用方式一，将元素内容放入template中</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#88846F;">// this.shadowRoot.innerHTML = template.innerHTML;</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#88846F;">// 模版使用方式二</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.shadowRoot.</span><span style="color:#A6E22E;">append</span><span style="color:#F8F8F2;">(template.content.</span><span style="color:#A6E22E;">cloneNode</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#88846F;">// 改变元素样式</span></span>
<span class="line"><span style="color:#F8F8F2;">          </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.shadowRoot.</span><span style="color:#A6E22E;">querySelector</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;slot[name=&quot;myText&quot;]&#39;</span><span style="color:#F8F8F2;">).</span><span style="color:#A6E22E;">onclick</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#FD971F;font-style:italic;">event</span></span>
<span class="line"><span style="color:#F8F8F2;">          ) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">            event.target.style.color </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;red&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">          };</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">      }</span></span>
<span class="line"><span style="color:#F8F8F2;">      customElements.</span><span style="color:#A6E22E;">define</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;my-ele&quot;</span><span style="color:#F8F8F2;">, myEle);</span></span>
<span class="line"><span style="color:#F8F8F2;">    &lt;/</span><span style="color:#F92672;">script</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;/</span><span style="color:#F92672;">body</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">html</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><p>参考链接：<a href="https://developer.mozilla.org/zh-CN/docs/Web/Web_Components" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/Web_Components</a></p><h2 id="组织化架构" tabindex="-1">组织化架构 <a class="header-anchor" href="#组织化架构" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">简介</p><p>开发复杂软件的原则：不要让软件复杂<br> 当某个部分复杂了，就将其拆分为简单的部分，再以约定的协议、简单的方式组合起来<br><code>只有让复杂的事情简单化的架构才是好架构</code></p></div><p><img src="`+p+'" alt="clipboard.jpg"><img src="'+e+'" alt="subfield.jpg"></p>',20),c=[t];function r(F,i,y,b,m,u){return a(),n("div",null,c)}const h=s(o,[["render",r]]);export{E as __pageData,h as default};
