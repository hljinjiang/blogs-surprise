import{_ as t,o as e,c as r,U as a}from"./chunks/framework.76b79cb5.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"other/front-end-basic.md","filePath":"other/front-end-basic.md","lastUpdated":1706601393000}'),n={name:"other/front-end-basic.md"},l=a('<table><thead><tr><th style="text-align:center;">技术</th><th style="text-align:center;">重要程度</th><th style="text-align:center;">学习内容</th><th style="text-align:center;">学习网站</th></tr></thead><tbody><tr><td style="text-align:center;">基础语言：HTML/HTML5、CSS/CSS3、JavaScript/ECMAScript</td><td style="text-align:center;">5</td><td style="text-align:center;">各种标签、样式、属性、选择器、布局、动画、事件、数据类型、运算符、流程控制、字符串、数组、对象、函数、原型、继承、this、闭包、异步、Promise等</td><td style="text-align:center;"><p><a href="https://www.w3school.com.cn/" target="_blank" rel="noreferrer">W3School</a></p><p><a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="noreferrer">MDN</a></p><p><a href="https://es6.ruanyifeng.com/" target="_blank" rel="noreferrer">ES6入门教程</a></p></td></tr><tr><td style="text-align:center;">浏览器API：DOM、BOM、<b style="color:red;">Canvas、WebGL、WebAudio、WebRTC、WebWorker、ServiceWorker</b>等</td><td style="text-align:center;">4</td><td style="text-align:center;">浏览器提供的用于操作网页元素、发送请求、绘制图形、处理音视频、实现并行和离线等功能的接口，以及它们的用法和兼容性</td><td style="text-align:center;"><p><a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="noreferrer">MDN</a></p><p><a href="https://www.html5rocks.com/zh/" target="_blank" rel="noreferrer">HTML5 Rocks</a></p></td></tr><tr><td style="text-align:center;">新增的JS对象、方法、属性：Set、Map、WeakSet、WeakMap、Symbol、Proxy、Reflect等</td><td style="text-align:center;">3</td><td style="text-align:center;"><p>ES6及以后版本新增的一些特性，可以提高代码的可读性和性能，以及它们的作用和使用场景</p></td><td style="text-align:center;"><p><a href="https://es6.ruanyifeng.com/" target="_blank" rel="noreferrer">ES6入门教程</a></p></td></tr><tr><td style="text-align:center;">前端框架：<b style="color:red;">React</b>/Vue/Angular/Svelte等</td><td style="text-align:center;">5</td><td style="text-align:center;">目前最流行的前端框架，可以提高开发效率和用户体验，以及它们的基本原理和常用功能，如组件化开发、数据绑定、路由管理、状态管理等</td><td style="text-align:center;"><p><a href="https://reactjs.org/" target="_blank" rel="noreferrer">React官网</a></p><p><a href="https://vuejs.org/" target="_blank" rel="noreferrer">Vue官网</a></p><p><a href="https://angular.io/" target="_blank" rel="noreferrer">Angular官网</a></p><p><a href="https://svelte.dev/" target="_blank" rel="noreferrer">Svelte官网</a></p></td></tr><tr><td style="text-align:center;">前端构建化工程化工具：Webpack/Rollup/Vite/Snowpack等</td><td style="text-align:center;">4</td><td style="text-align:center;">用于打包和优化前端代码的工具，可以提高代码的质量和性能，以及它们的配置和使用方法，以及常用的Loader和Plugin</td><td style="text-align:center;"><p><a href="https://webpack.js.org/" target="_blank" rel="noreferrer">Webpack官网</a></p><p><a href="https://rollupjs.org/guide/en/" target="_blank" rel="noreferrer">Rollup官网</a></p><p><a href="https://vitejs.dev/" target="_blank" rel="noreferrer">Vite官网</a></p><p><a href="https://www.snowpack.dev/" target="_blank" rel="noreferrer">Snowpack官网</a></p></td></tr><tr><td style="text-align:center;">前端测试工具：Jest/Mocha/Chai/Sinon/Cypress等</td><td style="text-align:center;">3</td><td style="text-align:center;">用于对前端代码进行单元测试和端到端测试的工具，可以保证代码的正确性和稳定性，以及它们的基本语法和使用方法</td><td style="text-align:center;"><p><a href="https://jestjs.io/" target="_blank" rel="noreferrer">Jest官网</a></p><p><a href="https://mochajs.org/" target="_blank" rel="noreferrer">Mocha官网</a></p><p><a href="https://www.chaijs.com/" target="_blank" rel="noreferrer">Chai官网</a></p><p><a href="https://sinonjs.org/" target="_blank" rel="noreferrer">Sinon官网</a></p><p><a href="https://www.cypress.io/" target="_blank" rel="noreferrer">Cypress官网</a></p></td></tr><tr><td style="text-align:center;">移动端和客户端开发（多平台开发）：<b style="color:red;">Flutter</b>/React Native/Weex/Uni-app/Taro等</td><td style="text-align:center;">4</td><td style="text-align:center;">用于开发移动端或客户端应用的框架或平台，可以实现跨平台开发和原生体验，以及它们的优缺点和适用场景</td><td style="text-align:center;"><p><a href="https://flutter.dev/" target="_blank" rel="noreferrer">Flutter官网</a></p><p><a href="https://reactnative.dev/" target="_blank" rel="noreferrer">React Native官网</a></p><p><a href="https://weex.apache.org/" target="_blank" rel="noreferrer">Weex官网</a></p><p><a href="https://uniapp.dcloud.io/" target="_blank" rel="noreferrer">Uni-app官网</a></p><p><a href="https://taro.jd.com/" target="_blank" rel="noreferrer">Taro官网</a></p></td></tr><tr><td style="text-align:center;">渲染框架（SSR服务端渲染）：Next.js/Nuxt.js/Gatsby.js等</td><td style="text-align:center;">3</td><td style="text-align:center;">用于实现服务端渲染的框架，可以提高首屏加载速度和SEO效果，以及它们的原理和使用方法</td><td style="text-align:center;"><p><a href="https://nextjs.org/" target="_blank" rel="noreferrer">Next.js官网</a></p><p><a href="https://nuxtjs.org/" target="_blank" rel="noreferrer">Nuxt.js官网</a></p><p><a href="https://www.gatsbyjs.com/" target="_blank" rel="noreferrer">Gatsby.js官网</a></p></td></tr><tr><td style="text-align:center;">Node.js：Express/Koa/Nest.js/Egg.js等</td><td style="text-align:center;">4</td><td style="text-align:center;">基于Node.js的后端开发框架，可以实现前后端同构开发和全栈开发，以及它们的特点和功能</td><td style="text-align:center;"><p><a href="https://nodejs.org/en/" target="_blank" rel="noreferrer">Node.js官网</a></p><p><a href="https://expressjs.com/" target="_blank" rel="noreferrer">Express官网</a></p><p><a href="https://koajs.com/" target="_blank" rel="noreferrer">Koa官网</a></p><p><a href="https://nestjs.com/" target="_blank" rel="noreferrer">Nest.js官网</a></p><p><a href="https://eggjs.org/" target="_blank" rel="noreferrer">Egg.js官网</a></p></td></tr><tr><td style="text-align:center;">TypeScript：这是一种JavaScript的超集，可以提供静态类型检查和更多语法特性，可以提高代码的健壮性和可维护性，需要掌握它的基本语法和使用方法</td><td style="text-align:center;">4</td><td style="text-align:center;">TypeScript的基本类型、接口、类、函数、泛型、枚举、元组、类型断言、类型推断、类型兼容性、类型保护、类型别名、联合类型、交叉类型、声明文件等</td><td style="text-align:center;"><p><a href="https://www.typescriptlang.org/" target="_blank" rel="noreferrer">TypeScript官网</a></p></td></tr></tbody></table>',1),s=[l];function p(o,d,c,g,h,i){return e(),r("div",null,s)}const x=t(n,[["render",p]]);export{y as __pageData,x as default};
