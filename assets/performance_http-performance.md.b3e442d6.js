import{_ as s,c as n,o as a,a as e}from"./app.65ec353e.js";const l="/docs-surprise/assets/http-performance.d4efd591.png",p="/docs-surprise/assets/http-tcp.352124cc.png",u=JSON.parse('{"title":"HTTP Performance Optimization","description":"","frontmatter":{},"headers":[{"level":2,"title":"DNS","slug":"dns","link":"#dns","children":[]},{"level":2,"title":"GZIP","slug":"gzip","link":"#gzip","children":[]},{"level":2,"title":"缓存","slug":"缓存","link":"#缓存","children":[]},{"level":2,"title":"针对协议版本采取优化措施","slug":"针对协议版本采取优化措施","link":"#针对协议版本采取优化措施","children":[{"level":3,"title":"connection: keep-live","slug":"connection-keep-live","link":"#connection-keep-live","children":[]}]}],"relativePath":"performance/http-performance.md","lastUpdated":1675325898000}'),o={name:"performance/http-performance.md"},r=e(`<h1 id="http-performance-optimization" tabindex="-1">HTTP Performance Optimization <a class="header-anchor" href="#http-performance-optimization" aria-hidden="true">#</a></h1><h2 id="dns" tabindex="-1">DNS <a class="header-anchor" href="#dns" aria-hidden="true">#</a></h2><p>在载入URL后，首先会去请求加载URL的IP，这就涉及到DNS解析时间，DNS优化则可总结为以下两点：</p><ol><li>减少DNS请求次数 <ol><li>在同一个网站中，减少不同域名的使用，使其降低DNS解析的时间</li></ol></li><li>缩短DNS解析时间 <ol><li>采用<code>dns-prefetch</code>，<strong>提前解析第三方服务器的IP地址</strong>，当之后有请求用到该IP时将不再耗费DNS解析时间</li><li>能够有效帮助缩短DNS解析产生的延迟</li></ol></li></ol><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">link</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">rel</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;dns-prefetch&quot;</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">href</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;https://baidu.com/&quot;</span><span style="color:#F8F8F2;">&gt; </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>参考链接：<a href="https://developer.mozilla.org/zh-CN/docs/Web/Performance/dns-prefetch" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/Performance/dns-prefetch</a></p><h2 id="gzip" tabindex="-1">GZIP <a class="header-anchor" href="#gzip" aria-hidden="true">#</a></h2><p>HTTP请求头: Accept-Encoding: gzip, deflate, br<br> HTTP响应头: Content-Encoding: gzip</p><ol><li>动态压缩: 在nginx.conf配置动态开启gzip，请求发生时nginx实时压缩返回文件</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">#开启gzip</span></span>
<span class="line"><span style="color:#F8F8F2;">gzip  on;  </span></span>
<span class="line"><span style="color:#F8F8F2;">#低于1kb的资源不压缩 </span></span>
<span class="line"><span style="color:#F8F8F2;">gzip_min_length 1k;</span></span>
<span class="line"><span style="color:#F8F8F2;">#压缩级别1</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">，越大压缩率越高，同时消耗cpu资源也越多，建议设置在5左右。 </span></span>
<span class="line"><span style="color:#F8F8F2;">gzip_comp_level </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">; </span></span>
<span class="line"><span style="color:#F8F8F2;">#需要压缩哪些响应类型的资源，多个空格隔开。不建议压缩图片.</span></span>
<span class="line"><span style="color:#F8F8F2;">gzip_types text</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">plain application</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">javascript application</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">x</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">javascript text</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">javascript text</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">xml text</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">css;  </span></span>
<span class="line"><span style="color:#F8F8F2;">#配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）</span></span>
<span class="line"><span style="color:#F8F8F2;">gzip_disable </span><span style="color:#E6DB74;">&quot;MSIE [1-6]</span><span style="color:#AE81FF;">\\.</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">;  </span></span>
<span class="line"><span style="color:#F8F8F2;">#是否添加“Vary: Accept</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">Encoding”响应头</span></span>
<span class="line"><span style="color:#F8F8F2;">gzip_vary on;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ol start="2"><li><strong>静态压缩</strong>: 提前将文件压缩成 .gz 格式，请求来了，直接返回即可</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;"># 开启gzip静态文件返回，请求文件中有匹配到 .gz 则返回，无则返回请求文件</span></span>
<span class="line"><span style="color:#F8F8F2;">gzip_static on;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="缓存" tabindex="-1">缓存 <a class="header-anchor" href="#缓存" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// 开启强制缓存</span></span>
<span class="line"><span style="color:#88846F;">// 300秒内加载本地缓存，不会去请求服务器，超过时间后会去请求，匹配文件是否修改，无修改则304，有修改则200</span></span>
<span class="line"><span style="color:#F8F8F2;">add_header Cache</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">Control max</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">age</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">300</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 开启协商缓存</span></span>
<span class="line"><span style="color:#88846F;">// 请求会通过 ETag/If-None-Match 或者 Last-Modified/If-Modified-Since 匹配文件是否修改，无修改则304，有修改则200</span></span>
<span class="line"><span style="color:#F8F8F2;">add_header Cache</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">Control max</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">age</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="针对协议版本采取优化措施" tabindex="-1">针对协议版本采取优化措施 <a class="header-anchor" href="#针对协议版本采取优化措施" aria-hidden="true">#</a></h2><p><img src="`+l+'" alt=""><img src="'+p+'" alt=""></p><h3 id="connection-keep-live" tabindex="-1">connection: keep-live <a class="header-anchor" href="#connection-keep-live" aria-hidden="true">#</a></h3><p>持久化HTTP，通过重用TCP连接，减少HTTP响应时间</p>',18),c=[r];function t(i,F,d,y,h,m){return a(),n("div",null,c)}const g=s(o,[["render",t]]);export{u as __pageData,g as default};
