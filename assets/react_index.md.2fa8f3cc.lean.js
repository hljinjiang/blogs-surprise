import{_ as y,c as u,b as s,d as n,e as a,a as p,o as b,r as l}from"./app.1a67c3a4.js";const m="/assets/life.52bdb207.png",d="/assets/redux.d3e40b72.png",j=JSON.parse('{"title":"React Basics","description":"","frontmatter":{},"headers":[{"level":2,"title":"组件类别","slug":"组件类别","link":"#组件类别","children":[{"level":3,"title":"类组件","slug":"类组件","link":"#类组件","children":[]},{"level":3,"title":"函数组件","slug":"函数组件","link":"#函数组件","children":[]}]},{"level":2,"title":"类组件和函数组件的区别","slug":"类组件和函数组件的区别","link":"#类组件和函数组件的区别","children":[{"level":3,"title":"编写方式区别","slug":"编写方式区别","link":"#编写方式区别","children":[]},{"level":3,"title":"状态管理区别","slug":"状态管理区别","link":"#状态管理区别","children":[]},{"level":3,"title":"生命周期区别","slug":"生命周期区别","link":"#生命周期区别","children":[]},{"level":3,"title":"成员属性区别","slug":"成员属性区别","link":"#成员属性区别","children":[]}]},{"level":2,"title":"State","slug":"state","link":"#state","children":[]},{"level":2,"title":"Props","slug":"props","link":"#props","children":[]},{"level":2,"title":"refs","slug":"refs","link":"#refs","children":[]},{"level":2,"title":"⽣命周期","slug":"生命周期","link":"#生命周期","children":[{"level":3,"title":"挂载阶段","slug":"挂载阶段","link":"#挂载阶段","children":[]},{"level":3,"title":"更新阶段","slug":"更新阶段","link":"#更新阶段","children":[]},{"level":3,"title":"卸载阶段","slug":"卸载阶段","link":"#卸载阶段","children":[]}]},{"level":2,"title":"组件传值","slug":"组件传值","link":"#组件传值","children":[{"level":3,"title":"props","slug":"props-1","link":"#props-1","children":[]},{"level":3,"title":"context","slug":"context","link":"#context","children":[]},{"level":3,"title":"events","slug":"events","link":"#events","children":[]}]},{"level":2,"title":"页面路由","slug":"页面路由","link":"#页面路由","children":[{"level":3,"title":"react-router-dom","slug":"react-router-dom","link":"#react-router-dom","children":[]}]},{"level":2,"title":"Redux","slug":"redux","link":"#redux","children":[]}],"relativePath":"react/index.md","lastUpdated":1677548376000}'),E={name:"react/index.md"},h=p("",38),g=s("ol",null,[s("li",null,"BrowserRouter 使用 HTML5 提供的 history API 实现"),s("li",null,"HashRouter 使用 # 方式跟在 URL 后面")],-1),f=p("",1),D={start:"2"},v=s("ol",null,[s("li",null,"通常由 Switch 包裹 Route 匹配 URL 路径是否一致")],-1),A=p("",1),k={start:"3"},_=p("",11);function C(x,q,B,R,S,P){const e=l("BrowserRouter"),o=l("HashRouter"),t=l("Route"),r=l("Switch"),c=l("Link"),F=l("NavLink"),i=l("Redirect");return b(),u("div",null,[h,s("ol",null,[s("li",null,[n("路由组件(router components) 比如 "),a(e),n(" 和 "),a(o),g])]),f,s("ol",D,[s("li",null,[n("路由匹配组件(route matchers components) 比如 "),a(t),n(" 和 "),a(r),v])]),A,s("ol",k,[s("li",null,[n("导航组件(navigation components) 比如 "),a(c),n(", "),a(F),n(", 和 "),a(i)])]),_])}const w=y(E,[["render",C]]);export{j as __pageData,w as default};
