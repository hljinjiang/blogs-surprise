import{_ as o,c as s,b as l,d as i,e as r,a as t,o as n,r as a}from"./app.46bbe91d.js";const p="/docs-surprise/assets/Aspose.Words.bdb07b23-8480-466b-9fef-08b6ea7387cb.001.4b54eb3a.jpeg",c="/docs-surprise/assets/Aspose.Words.bdb07b23-8480-466b-9fef-08b6ea7387cb.002.f2ba4eec.jpeg",I=JSON.parse('{"title":"React Basics","description":"","frontmatter":{},"headers":[],"relativePath":"react/react-basics.md","lastUpdated":1673763462000}'),d={name:"react/react-basics.md"},u=l("h1",{id:"react-basics",tabindex:"-1"},[i("React Basics "),l("a",{class:"header-anchor",href:"#react-basics","aria-hidden":"true"},"#")],-1),_=t("",15),m=l("li",null,"props是不可变的，⼦组件不可修改 props，由⽗组件传⼊⼦组件",-1),h=l("li",null,"import PropTypes from ‘prop-typesʼ，引⼊对属性 prop的限制",-1),f=l("li",null,"MyComponent.propTypes = { name: PropTypes.string.isRequired }；属性限制",-1),b=l("li",null,"MyComponent.defaultProps = { name: 'json' }：属性默认值",-1),g=l("li",null,"refs",-1),T=l("li",null,"属性定义到 render中任何标签或组件上，以访问绑定的 dom节点",-1),P=l("li",null,"⻚⾯内所有输⼊类 dom，现⽤现取，属于⾮受控组件",-1),R=l("li",null,"⻚⾯内所有输⼊类 dom，value值存储于 state⾥⾯，需要⽤的时候才拿出来，数据由 state状态管理，属 于受控组件",-1),S={ref:"input1"},x=l("li",null,"<input ref={e => (this.input2 = e)} />（更新数据时会触发两次事件，⼀次为 null⼀次为 dom节点；因 为每次渲染时会创建⼀个新的函数实例，所以 react清空旧的 ref并设置新的）",-1),y=l("li",null,"通过将回调函数定义成 class的绑定函数可以避免",-1),A={ref:"{this.input1}"},C={ref:"{this.myRef}"},U=t("",8);function V(v,B,D,N,W,k){const e=a("A");return n(),s("div",null,[u,l("ol",null,[_,l("li",null,[i("props "),l("ol",null,[m,l("li",null,[i("对⼦组件传⼊ prop"),r(e,{name:"1",name1:"{1}"})]),h,f,b])]),g,T,P,R,l("li",null,[l("input",S,null,512)]),x,y,l("li",null,[l("input",A,null,512),i("（通过 input1函数的形参接收 dom节点）")]),l("li",null,[i("myRef = React.createRef()； "),l("input",C,null,512),i("； this.myRef.current则指向 dom")])]),U])}const E=o(d,[["render",V]]);export{I as __pageData,E as default};
