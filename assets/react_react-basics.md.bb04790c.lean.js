import{_ as e,c as a,b as s,d as l,e as t,a as n,o as p,r as i}from"./app.46bbe91d.js";const r="/docs-surprise/assets/Aspose.Words.bdb07b23-8480-466b-9fef-08b6ea7387cb.001.4b54eb3a.jpeg",c="/docs-surprise/assets/Aspose.Words.bdb07b23-8480-466b-9fef-08b6ea7387cb.002.f2ba4eec.jpeg",w=JSON.parse('{"title":"React Basics","description":"","frontmatter":{},"headers":[{"level":2,"title":"组件类别","slug":"组件类别","link":"#组件类别","children":[]}],"relativePath":"react/react-basics.md","lastUpdated":1674824658000}'),F={name:"react/react-basics.md"},u=n("",4),d={start:"2"},_=n("",1),y=s("p",null,"三⼤属性",-1),m=s("li",null,[l("state： "),s("ol",null,[s("li",null,"是⼀个对象，称为状态"),s("li",null,"包含多个 key-value"),s("li",null,[l("更新 state中的属性值，便可以重新渲染对应 UI视图⻚⾯ "),s("ol",null,[s("li",null,"state不可以直接更改属性"),s("li",null,"使⽤ this.setState({})只修改对应的属性以更改数据，驱动更改视图层")])])])],-1),b=s("li",null,"props是不可变的，⼦组件不可修改 props，由⽗组件传⼊⼦组件",-1),h=s("li",null,"import PropTypes from ‘prop-typesʼ，引⼊对属性 prop的限制",-1),g=s("li",null,"MyComponent.propTypes = { name: PropTypes.string.isRequired }；属性限制",-1),f=s("li",null,"MyComponent.defaultProps = { name: 'json' }：属性默认值",-1),E=s("li",null,"属性定义到 render中任何标签或组件上，以访问绑定的 dom节点",-1),T=s("li",null,"⻚⾯内所有输⼊类 dom，现⽤现取，属于⾮受控组件",-1),A=s("li",null,[s("code",null,'<input ref="input1" />')],-1),C=s("li",null,[s("code",null,"<input ref={e => (this.input2 = e)} />"),l("（更新数据时会触发两次事件，⼀次为 null⼀次为 dom节点；因 为每次渲染时会创建⼀个新的函数实例，所以 react清空旧的 ref并设置新的）")],-1),S=s("li",null,"通过将回调函数定义成 class的绑定函数可以避免",-1),x=s("li",null,[s("code",null,"<input ref={this.input1} />"),l("（通过 input1函数的形参接收 dom节点）")],-1),P={ref:"{this.myRef}"},v=n("",8);function R(D,k,V,U,B,I){const o=i("A");return p(),a("div",null,[u,s("ol",d,[_,s("li",null,[y,s("ol",null,[m,s("li",null,[l("props "),s("ol",null,[b,s("li",null,[l("对⼦组件传⼊ prop"),t(o,{name:"1",name1:"{1}"})]),h,g,f])]),s("li",null,[l("refs "),s("ol",null,[E,T,s("li",null,[l("⻚⾯内所有输⼊类 dom，value值存储于 state⾥⾯，需要⽤的时候才拿出来，数据由 state状态管理，属 于受控组件 "),s("ol",null,[A,C,S,x,s("li",null,[l("myRef = React.createRef()； "),s("input",P,null,512),l("； this.myRef.current则指向 dom")])])])])])])]),v])])}const W=e(F,[["render",R]]);export{w as __pageData,W as default};
