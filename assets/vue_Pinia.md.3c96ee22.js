import{_ as s,c as n,o as a,a as l}from"./app.f1cfe86d.js";const m=JSON.parse('{"title":"Pinia","description":"","frontmatter":{},"headers":[{"level":2,"title":"创建Store","slug":"创建store","link":"#创建store","children":[]},{"level":2,"title":"定义Store","slug":"定义store","link":"#定义store","children":[]},{"level":2,"title":"使用Store","slug":"使用store","link":"#使用store","children":[]},{"level":2,"title":"Pinia 插件","slug":"pinia-插件","link":"#pinia-插件","children":[]}],"relativePath":"vue/Pinia.md","lastUpdated":1682167148000}'),p={name:"vue/Pinia.md"},e=l(`<h1 id="pinia" tabindex="-1">Pinia <a class="header-anchor" href="#pinia" aria-hidden="true">#</a></h1><div class="info custom-block"><p class="custom-block-title">简介</p><p>vue官方团队推荐，替代vuex</p></div><h2 id="创建store" tabindex="-1">创建Store <a class="header-anchor" href="#创建store" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { createPinia } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;pinia&#39;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { createApp, watch } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;vue&#39;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> App </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;./App.vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 创建pinia store</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> pinia </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createPinia</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> app </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createApp</span><span style="color:#F8F8F2;">(App)</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#A6E22E;">use</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">createPinia</span><span style="color:#F8F8F2;">())</span></span>
<span class="line"><span style="color:#F8F8F2;">app.</span><span style="color:#A6E22E;">mount</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;#app&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 可监听整个store变化</span></span>
<span class="line"><span style="color:#A6E22E;">watch</span><span style="color:#F8F8F2;">(pinia.state, (</span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(state)</span></span>
<span class="line"><span style="color:#F8F8F2;">},{ deep: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">, immediate: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;"> })</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="定义store" tabindex="-1">定义Store <a class="header-anchor" href="#定义store" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { defineStore } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;pinia&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// 定义store，指明id</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> userStore </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">defineStore</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;user&#39;</span><span style="color:#F8F8F2;">, {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 定义状态</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">state</span><span style="color:#F8F8F2;">: () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> ({</span></span>
<span class="line"><span style="color:#F8F8F2;">        user: </span><span style="color:#E6DB74;">&#39;超级管理员&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        count: </span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">    }),</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 定义计算属性</span></span>
<span class="line"><span style="color:#F8F8F2;">    getters: {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#A6E22E;">double</span><span style="color:#F8F8F2;">: (</span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> state.count </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 定义动作</span></span>
<span class="line"><span style="color:#F8F8F2;">    actions: {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#A6E22E;">changeUser</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#88846F;">// 可通过this访问当前整个this</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;">.user </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> val</span></span>
<span class="line"><span style="color:#F8F8F2;">        },</span></span>
<span class="line"><span style="color:#F8F8F2;">    },</span></span>
<span class="line"><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="使用store" tabindex="-1">使用Store <a class="header-anchor" href="#使用store" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { userStore } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;@/store/module/user&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { storeToRefs } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;pinia&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#88846F;">// 获取store对象</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> store </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">userStore</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#88846F;">// 使其state的属性保持响应性</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> { user, double } </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">storeToRefs</span><span style="color:#F8F8F2;">(store)</span></span>
<span class="line"><span style="color:#88846F;">// 重置store</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">handleReset</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    store.</span><span style="color:#A6E22E;">$reset</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#88846F;">// 修改store</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">handleEdit</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    store.</span><span style="color:#A6E22E;">$patch</span><span style="color:#F8F8F2;">({</span></span>
<span class="line"><span style="color:#F8F8F2;">        user: </span><span style="color:#E6DB74;">&#39;女&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">        count: </span><span style="color:#AE81FF;">4</span></span>
<span class="line"><span style="color:#F8F8F2;">    })</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#88846F;">// 调用action</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">handleAction</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    store.</span><span style="color:#A6E22E;">changeUser</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;普通用户&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#88846F;">// 监听store变化</span></span>
<span class="line"><span style="color:#F8F8F2;">store.</span><span style="color:#A6E22E;">$subscribe</span><span style="color:#F8F8F2;">((</span><span style="color:#FD971F;font-style:italic;">mutation</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">state</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// &#39;direct&#39; | &#39;patch object&#39; | &#39;patch function&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(mutation.type)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// &#39;user&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(mutation.storeId)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 只有 mutation.type === &#39;patch object&#39;的情况下才可用</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 传递给 cartStore.$patch() 的补丁对象。</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(mutation.payload)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 每当状态发生变化时，将整个 state 持久化到本地存储。</span></span>
<span class="line"><span style="color:#F8F8F2;">    localStorage.</span><span style="color:#A6E22E;">setItem</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;cart&#39;</span><span style="color:#F8F8F2;">, JSON.</span><span style="color:#A6E22E;">stringify</span><span style="color:#F8F8F2;">(state))</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// detached使其在组件被卸载后，该订阅依旧会被保留。</span></span>
<span class="line"><span style="color:#F8F8F2;">},{ detached: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;"> })</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h2 id="pinia-插件" tabindex="-1">Pinia 插件 <a class="header-anchor" href="#pinia-插件" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">简介</p><ol><li>为 store 添加新的属性</li><li>定义 store 时增加新的选项</li><li>为 store 增加新的方法</li><li>包装现有的方法</li><li>改变甚至取消 action</li><li>实现副作用，如本地存储</li><li>仅应用插件于特定 store</li></ol></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { createPinia } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;pinia&#39;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { ref } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&quot;vue&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">piniaPlugin</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#FD971F;font-style:italic;">context</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">/*  当有多个 store 调用时，会重复触发该函数</span></span>
<span class="line"><span style="color:#88846F;">        context.pinia // 用 \`createPinia()\` 创建的 pinia。</span></span>
<span class="line"><span style="color:#88846F;">        context.app // 用 \`createApp()\` 创建的当前应用(仅 Vue 3)。</span></span>
<span class="line"><span style="color:#88846F;">        context.store // 该插件想扩展的 store</span></span>
<span class="line"><span style="color:#88846F;">        context.options // 定义传给 \`defineStore()\` 的 store 的可选对象。</span></span>
<span class="line"><span style="color:#88846F;">    * */</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(context)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#88846F;">// 返回的对象会在每个store上访问到</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span><span style="color:#88846F;">// 定义响应性数据，可以修改以呈现响应式</span></span>
<span class="line"><span style="color:#F8F8F2;">        secret: </span><span style="color:#A6E22E;">ref</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;the cake is a lie&#39;</span><span style="color:#F8F8F2;">),</span></span>
<span class="line"><span style="color:#F8F8F2;">        hello: </span><span style="color:#E6DB74;">&#39;hello world&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#88846F;">// 创建 Pinia，使用use扩展plugin</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">default</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">createPinia</span><span style="color:#F8F8F2;">().</span><span style="color:#A6E22E;">use</span><span style="color:#F8F8F2;">(piniaPlugin)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>参考链接：<a href="https://pinia.vuejs.org/zh/index.html" target="_blank" rel="noreferrer">https://pinia.vuejs.org/zh/index.html</a></p>`,12),o=[e];function r(t,c,F,i,y,b){return a(),n("div",null,o)}const d=s(p,[["render",r]]);export{m as __pageData,d as default};
